{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Movies_subscription_management\\\\client\\\\src\\\\pages\\\\movies\\\\AllMovies.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axiosRequest from \"../../config/axiosConfig\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllMovies = () => {\n  _s();\n  const [offSet, setOffSet] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [movies, setMovies] = useState([]);\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const subUrl = process.env.REACT_APP_SUBWS;\n  const getMovies = async () => {\n    console.log(subUrl);\n    try {\n      console.log(`${subUrl}/movies?offset=${offSet}&limit=${limit}`);\n      const data = await axiosRequest.get(`${subUrl}/movies?offset=${offSet}&limit=${limit}`);\n      //setMovies(data.movies)\n      console.log(data);\n    } catch (error) {\n      if (error.response.status === 401) {\n        setMessage(`${error.response.data.message}, you will be logged out in 3 seconds`);\n        setTimeout(() => {\n          dispatch({\n            type: 'RESET_USERS'\n          });\n          dispatch({\n            type: 'LOGOUT'\n          });\n          localStorage.removeItem('token');\n          navigate('/');\n        }, 3000);\n      } else {\n        setMessage(error.response.data.message);\n        console.log(error);\n      }\n    }\n  };\n  useEffect(() => {\n    getMovies();\n    console.log('hello');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"All Movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AllMovies, \"dfqp5QBoonynm8T8cYrsWaKRti4=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = AllMovies;\nexport default AllMovies;\nvar _c;\n$RefreshReg$(_c, \"AllMovies\");","map":{"version":3,"names":["useState","useEffect","axiosRequest","useDispatch","useNavigate","jsxDEV","_jsxDEV","AllMovies","_s","offSet","setOffSet","limit","setLimit","movies","setMovies","message","setMessage","dispatch","navigate","subUrl","process","env","REACT_APP_SUBWS","getMovies","console","log","data","get","error","response","status","setTimeout","type","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/Movies_subscription_management/client/src/pages/movies/AllMovies.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axiosRequest from \"../../config/axiosConfig\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst AllMovies = () => {\r\n\r\n    const[offSet, setOffSet] = useState(0)\r\n    const[limit, setLimit] = useState(10)\r\n    const[movies, setMovies] = useState([])\r\n    const[message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const subUrl  = process.env.REACT_APP_SUBWS\r\n\r\n\r\n    const getMovies = async () => {\r\n        console.log(subUrl)\r\n        try {\r\n            console.log(`${subUrl}/movies?offset=${offSet}&limit=${limit}`)\r\n            const data = await axiosRequest.get(`${subUrl}/movies?offset=${offSet}&limit=${limit}`)\r\n            //setMovies(data.movies)\r\n            console.log(data)\r\n        } catch (error) {\r\n            if (error.response.status === 401) {\r\n                setMessage(`${error.response.data.message}, you will be logged out in 3 seconds`)\r\n                setTimeout(() => {\r\n                    dispatch({type: 'RESET_USERS'})\r\n                    dispatch({type: 'LOGOUT'})\r\n                    localStorage.removeItem('token')\r\n                    navigate('/')\r\n                }, 3000)\r\n            } else {\r\n                setMessage(error.response.data.message)\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovies()\r\n        console.log('hello')\r\n    }, [])\r\n\r\n    return (\r\n        <h2>All Movies</h2>\r\n    )\r\n}\r\n\r\nexport default AllMovies"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACtC,MAAK,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAK,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAK,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMiB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,MAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;EAG3C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1BC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IACnB,IAAI;MACAK,OAAO,CAACC,GAAG,CAAC,GAAGN,MAAM,kBAAkBV,MAAM,UAAUE,KAAK,EAAE,CAAC;MAC/D,MAAMe,IAAI,GAAG,MAAMxB,YAAY,CAACyB,GAAG,CAAC,GAAGR,MAAM,kBAAkBV,MAAM,UAAUE,KAAK,EAAE,CAAC;MACvF;MACAa,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC/Bd,UAAU,CAAC,GAAGY,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACX,OAAO,uCAAuC,CAAC;QACjFgB,UAAU,CAAC,MAAM;UACbd,QAAQ,CAAC;YAACe,IAAI,EAAE;UAAa,CAAC,CAAC;UAC/Bf,QAAQ,CAAC;YAACe,IAAI,EAAE;UAAQ,CAAC,CAAC;UAC1BC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;UAChChB,QAAQ,CAAC,GAAG,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM;QACHF,UAAU,CAACY,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACX,OAAO,CAAC;QACvCS,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC;EAED3B,SAAS,CAAC,MAAM;IACZsB,SAAS,CAAC,CAAC;IACXC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAA6B,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE3B,CAAC;AAAA/B,EAAA,CA1CKD,SAAS;EAAA,QAMMJ,WAAW,EACXC,WAAW;AAAA;AAAAoC,EAAA,GAP1BjC,SAAS;AA4Cf,eAAeA,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}