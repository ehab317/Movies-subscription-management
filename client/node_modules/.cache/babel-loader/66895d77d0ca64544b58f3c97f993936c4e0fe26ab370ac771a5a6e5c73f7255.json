{"ast":null,"code":"import axios from 'axios';\nconst axiosR = axios.create({\n  withCredentials: true\n});\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default axios;","map":{"version":3,"names":["axios","axiosR","create","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["C:/projects/Movies_subscription_management/client/src/config/axiosConfig.js"],"sourcesContent":["import axios from 'axios'\r\nconst axiosR = axios.create({\r\n    withCredentials: true\r\n})\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\nexport default axios"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC;EACxBC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFH,KAAK,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAEH,eAAeZ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}