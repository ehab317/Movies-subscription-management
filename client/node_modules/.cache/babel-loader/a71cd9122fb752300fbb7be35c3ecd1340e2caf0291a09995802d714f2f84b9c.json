{"ast":null,"code":"import axios from 'axios';\nconst axiosRequest = axios.create({\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    delete config.headers.Authorization;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default axiosRequest;","map":{"version":3,"names":["axios","axiosRequest","create","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["C:/projects/Movies_subscription_management/client/src/config/axiosConfig.js"],"sourcesContent":["import axios from 'axios'\r\nconst axiosRequest = axios.create({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    withCredentials: true\r\n})\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        \r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      } else {\r\n        delete config.headers.Authorization;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\nexport default axiosRequest"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE;IACL,cAAc,EAAE;EAClB,CAAC;EACHC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IAETD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD,CAAC,MAAM;IACL,OAAOD,MAAM,CAACL,OAAO,CAACS,aAAa;EACrC;EACA,OAAOJ,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAEH,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}